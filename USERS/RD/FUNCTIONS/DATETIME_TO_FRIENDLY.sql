/*
UTC
*/
CREATE OR REPLACE
FUNCTION DATETIME_TO_FRIENDLY
(
    gDateTime IN DATE,
    gAddress_ID IN ADDRESS.ID%TYPE DEFAULT NULL
)
RETURN VARCHAR2
PARALLEL_ENABLE
AS

    PRAGMA UDF;
    dDateTimeLocal DATE;
    dDateTimeCurrentLocal DATE;

BEGIN

    IF (EXTRACT(DAY FROM SYS_EXTRACT_UTC(SYSTIMESTAMP) - CAST(gDateTime AS TIMESTAMP)) <= 0) THEN

        RETURN DSINTERVAL_TO_FRIENDLY
        (
            SYS_EXTRACT_UTC(SYSTIMESTAMP) - CAST(gDateTime AS TIMESTAMP),
            'minute'
        );

    ELSE

        dDateTimeLocal := DATE_LOCAL_AT_ADDRESS(gDateTime, gAddress_ID);
        dDateTimeCurrentLocal := DATE_LOCAL_AT_ADDRESS(SYSDATE_UTC, gAddress_ID);

        RETURN CASE
            WHEN dDateTimeLocal >= TRUNC(dDateTimeCurrentLocal) - 1 THEN 'Yesterday ' || TO_CHAR(dDateTimeLocal, 'HH24:MI')
            WHEN dDateTimeLocal >= TRUNC(dDateTimeCurrentLocal) - 6 THEN TO_CHAR(dDateTimeLocal, 'fmDay ') || TO_CHAR(dDateTimeLocal, 'HH24:MI')
            WHEN dDateTimeLocal >= TRUNC(ADD_MONTHS(dDateTimeCurrentLocal, -11), 'MM') THEN TO_CHAR(dDateTimeLocal, 'Dy fmDD Mon, ') || TO_CHAR(dDateTimeLocal, 'HH24:MI')
            ELSE TO_CHAR(dDateTimeLocal, 'DD Mon YYYY, HH24:MI')
        END;

    END IF;

END;
/

/*
--test
SELECT TO_CHAR(SYSDATE + 2, 'YYYY-MM-DD"T"HH24:MI:SS'),
DATETIME_TO_FRIENDLY(SYSDATE + 2)
FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD"T"HH24:MI:SS'),
DATETIME_TO_FRIENDLY(SYSDATE)
FROM DUAL;

SELECT TO_CHAR(SYSDATE-1, 'YYYY-MM-DD"T"HH24:MI:SS'),
DATETIME_TO_FRIENDLY(SYSDATE-1)
FROM DUAL;

SELECT TO_CHAR(SYSDATE-3, 'YYYY-MM-DD"T"HH24:MI:SS'),
DATETIME_TO_FRIENDLY(SYSDATE-3)
FROM DUAL;

SELECT TO_CHAR(SYSDATE-7, 'YYYY-MM-DD"T"HH24:MI:SS'),
DATETIME_TO_FRIENDLY(SYSDATE-7)
FROM DUAL;

SELECT TO_CHAR(SYSDATE-32, 'YYYY-MM-DD"T"HH24:MI:SS'),
DATETIME_TO_FRIENDLY(SYSDATE-32)
FROM DUAL;

SELECT TO_CHAR(SYSDATE-600, 'YYYY-MM-DD"T"HH24:MI:SS'),
DATETIME_TO_FRIENDLY(SYSDATE-600)
FROM DUAL;
*/